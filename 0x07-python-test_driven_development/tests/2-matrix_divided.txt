The ``2-matrix_divided`` module
============================

Using ``matrix_divided`` function
---------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[]], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3],[1,2,3]], "hello")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1,2,3],[1,2,3]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1,2,3], [2,3,'h']], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [1,2]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided([[1,2,3], [4,5,6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix_divided())
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> print(matrix_divided([[1,2,3], [1,2,3]]))
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided([[1,2,3], [1,2,3]], float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> print(matrix_divided([[1,2,3], [1,2,3]], float('-inf')))
[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]
